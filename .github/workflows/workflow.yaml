name: test deploy AKS

on:
  workflow_dispatch:

jobs:
  build:
    #uses: Blue-Express/bx_templates/.github/workflows/build-java.yml@blue
    uses: absalon-github-org/rwf/.github/workflows/python-web-api-aks-deploy.yaml@main
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    #   REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    #   REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
    #   REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
    #   RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  # push-img:
  #   uses: Blue-Express/bx_templates/.github/workflows/push-java.yml@blue
  #   needs: build
  #   with:
  #     environment: ${{ github.ref_name }}
  #   secrets:
  #     AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_REGION: ${{ secrets.AWS_REGION }}

  # deploy:
  #   uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-api.yml@blue
  #   needs: push-img
  #   with:
  #     environment: ${{ github.ref_name }}
  #     namespace: ns-name
  #     path-values: helm/values-${{ github.ref_name }}.yml
  #     base-path: /api/domain/v1
  #     liveness-path: /actuator/health
  #     liveness-initialDelay: '60'
  #     liveness-periodoSeconds: '10'
  #     liveness-timeoutSeconds: '20'
  #     ingress-enabled: true
  #     ingress-groupname: igrz-namespace
  #     cpu-base: '100m'
  #     memory-base: '128Mi'
  #     cpu-limit: '200m'
  #     memory-limit: '380Mi'
  #   secrets:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_REGION: ${{ secrets.AWS_REGION }}
  #     AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
  #     TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
  #     SECRETOS: ${{ toJSON(secrets) }}
  #     AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

  # api-mgnt:
  #   uses: Blue-Express/bx_templates/.github/workflows/kong.yml@blue
  #   needs: deploy
  #   with:
  #     environment: ${{ github.ref_name }}
  #     kong-srv-protocol: '"http"'
  #     kong-srv-host: ${{ needs.deploy.outputs.ingress }}
  #     kong-srv-port: '80'
  #     kong-cnsr: 'front-cnsr'
  #     kong-srv-path: '/api/domain/v1'
  #     kong-rts-protocol: '"http","https"'
  #     kong-rts-path: '/api/domain/v1'
  #     kong-rts-methods: '"GET", "POST", "HEAD", "OPTIONS", "CONNECT"'
  #     kong-plugins: '"jwt-keycloak" "key-auth" "cors"'
  #     kong-cors-origins: '"http://localhost:3000","https://localhost:3000"'
  #     kong-cors-methods: '"GET", "POST", "DELETE", "PATCH", "PUT", "HEAD", "OPTIONS", "TRACE", "CONNECT"'
  #     kong-jwt-allowed-iss: /auth/realms/name
  #   secrets:
  #     TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS  }}
  #     KONG_HOST: ${{ secrets.KONG_HOST }}
  #     AWS_REGION: ${{ secrets.AWS_REGION  }}
  #     KEYCLOAK_HOST: ${{ secrets.KEYCLOAK_HOST  }}
